import React, { useState } from "react";
import "./css/RatibPage.css";

const RatibPage = ({ onBack }: { onBack: () => void }) => {
  const [date, setDate] = useState("");
  const [time, setTime] = useState("");
  const [type, setType] = useState("‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§®‡§ø‡§µ‡§°‡§æ");
  const [mode, setMode] = useState("‡§â‡§ß‡§æ‡§∞‡•Ä");

  const [grahakNo, setGrahakNo] = useState("");
  const [grahakName, setGrahakName] = useState("");
  const [prakar, setPrakar] = useState("‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§®‡§ø‡§µ‡§°‡§æ");
  const [litre, setLitre] = useState("");
  const [dar, setDar] = useState("");
  const [rakkam, setRakkam] = useState("");

  const [records, setRecords] = useState<any[]>([]);

  const handleSave = () => {
    if (!grahakNo || !grahakName || !litre || !dar) {
      alert("‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡§∞‡•ç‡§µ ‡§Æ‡§æ‡§π‡§ø‡§§‡•Ä ‡§≠‡§∞‡§æ.");
      return;
    }
    const newRecord = {
      id: records.length + 1,
      type,
      grahakNo,
      grahakName,
      prakar,
      litre,
      dar,
      rakkam: (parseFloat(litre) * parseFloat(dar)).toFixed(2),
      mode,
    };
    setRecords([...records, newRecord]);
    setGrahakNo("");
    setGrahakName("");
    setPrakar("‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§®‡§ø‡§µ‡§°‡§æ");
    setLitre("");
    setDar("");
    setRakkam("");
  };

  const handleDelete = (id: number) => {
    setRecords(records.filter((r) => r.id !== id));
  };

  return (
    <div className="ratib-container">
     

      {/* Header */}
      <div className="header">
         <button className="btn-back" onClick={onBack}>
          ‚¨Ö ‡§Æ‡§æ‡§ó‡•á ‡§ú‡§æ
        </button>
        <h2 className="btn-nond">‡§∞‡§§‡§ø‡§¨ ‡§®‡•ã‡§Ç‡§¶</h2>
        <button className="btn-cash">üí∞ ‡§∞‡§§‡§ø‡§¨ ‡§ú‡§Æ‡§æ</button>
      </div>

      {/* First Row */}
      <div className="card">
        <div className="row nowrap">
          <div className="field">
            <label>‡§¶‡§ø‡§®‡§æ‡§Ç‡§ï</label>
            <input
              type="date"
              value={date}
              onChange={(e) => setDate(e.target.value)}
            />
          </div>

          <div className="field">
            <label>‡§µ‡•á‡§≥</label>
            <input
              type="time"
              value={time}
              onChange={(e) => setTime(e.target.value)}
            />
          </div>

          <div className="field">
            <label>‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞</label>
            <select value={type} onChange={(e) => setType(e.target.value)}>
              <option>‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§®‡§ø‡§µ‡§°‡§æ</option>
              <option>‡§ó‡§æ‡§Ø</option>
              <option>‡§Æ‡•ç‡§π‡•à‡§∏</option>
            </select>
          </div>

          <div className="radio-inline">
            <label>
              <input
                type="radio"
                name="mode"
                checked={mode === "‡§â‡§ß‡§æ‡§∞‡•Ä"}
                onChange={() => setMode("‡§â‡§ß‡§æ‡§∞‡•Ä")}
              />
              ‡§â‡§ß‡§æ‡§∞‡•Ä
            </label>
            <label>
              <input
                type="radio"
                name="mode"
                checked={mode === "‡§∞‡•ã‡§ñ"}
                onChange={() => setMode("‡§∞‡•ã‡§ñ")}
              />
              ‡§∞‡•ã‡§ñ
            </label>
          </div>
        </div>
      </div>

      {/* Second Row */}
      <div className="card">
        <div className="row nowrap">
          <div className="field">
            <label>‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§ï‡•ç‡§∞‡§Æ‡§æ‡§Ç‡§ï</label>
            <input
              value={grahakNo}
              onChange={(e) => setGrahakNo(e.target.value)}
              placeholder="‡§ï‡•ç‡§∞‡§Æ‡§æ‡§Ç‡§ï"
            />
          </div>

          <div className="field">
            <label>‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§®‡§æ‡§µ</label>
            <input
              value={grahakName}
              onChange={(e) => setGrahakName(e.target.value)}
              placeholder="‡§®‡§æ‡§µ"
            />
          </div>

          <div className="field">
            <label>‡§™‡•ç‡§∞‡§ï‡§æ‡§∞</label>
            <select value={prakar} onChange={(e) => setPrakar(e.target.value)}>
              <option>‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§®‡§ø‡§µ‡§°‡§æ</option>
              <option>‡§ó‡§æ‡§Ø ‡§¶‡•Ç‡§ß</option>
              <option>‡§Æ‡•ç‡§π‡•à‡§∏ ‡§¶‡•Ç‡§ß</option>
            </select>
          </div>

          <div className="field">
            <label>‡§≤‡§ø‡§ü‡§∞</label>
            <input
              value={litre}
              onChange={(e) => setLitre(e.target.value)}
              type="number"
            />
          </div>

          <div className="field">
            <label>‡§¶‡§∞</label>
            <input
              value={dar}
              onChange={(e) => setDar(e.target.value)}
              type="number"
            />
          </div>

          <div className="field">
            <label>‡§∞‡§ï‡•ç‡§ï‡§Æ</label>
            <input
              value={
                rakkam ||
                (litre && dar
                  ? (parseFloat(litre) * parseFloat(dar)).toFixed(2)
                  : "")
              }
              onChange={(e) => setRakkam(e.target.value)}
              type="number"
            />
          </div>

          <div className="field">
            <label>&nbsp;</label>
            <button className="btn-primary" onClick={handleSave}>
              ‡§∏‡•á‡§µ‡•ç‡§π
            </button>
          </div>
        </div>
      </div>

      {/* Table */}
      <div className="card">
        <table className="data-table">
          <thead>
            <tr>
              <th>‡§ï‡•ç‡§∞.</th>
              <th>‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞</th>
              <th>‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§ï‡•ç‡§∞‡§Æ‡§æ‡§Ç‡§ï</th>
              <th>‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§®‡§æ‡§µ</th>
              <th>‡§™‡•ç‡§∞‡§ï‡§æ‡§∞</th>
              <th>‡§≤‡§ø‡§ü‡§∞</th>
              <th>‡§¶‡§∞</th>
              <th>‡§∞‡§ï‡•ç‡§ï‡§Æ</th>
              <th>‡§¶‡•á‡§Ø ‡§™‡§¶‡•ç‡§ß‡§§</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            {records.length === 0 ? (
              <tr>
                <td colSpan={10}>‡§®‡•ã‡§Ç‡§¶ ‡§Ü‡§¢‡§≥‡§≤‡•Ä ‡§®‡§æ‡§π‡•Ä.</td>
              </tr>
            ) : (
              records.map((r) => (
                <tr key={r.id}>
                  <td>{r.id}</td>
                  <td>{r.type}</td>
                  <td>{r.grahakNo}</td>
                  <td>{r.grahakName}</td>
                  <td>{r.prakar}</td>
                  <td>{r.litre}</td>
                  <td>{r.dar}</td>
                  <td>{r.rakkam}</td>
                  <td>{r.mode}</td>
                  <td>
                    <button
                      className="btn-action delete"
                      onClick={() => handleDelete(r.id)}
                    >
                      Delete
                    </button>
                  </td>
                </tr>
              ))
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default RatibPage;
